<?php
session_start();
// Include connection file to the database
include("connection/connection.php");
$user_id = isset($_SESSION["userid"]) ? $_SESSION["userid"] : 0;
$searchText = "";
if($user_id > 0){

// Initialize an empty array to store the results
$reviews = [];

// SQL query to select REVIEW_ID, PRODUCT_ID
$selectReviewSql = "SELECT REVIEW_ID, PRODUCT_ID FROM REVIEW WHERE REVIEW_PROCIDED = 0 AND USER_ID = :customerId";

// Prepare the OCI statement
$selectReviewStmt = oci_parse($conn, $selectReviewSql);
if (!$selectReviewStmt) {
    $e = oci_error($conn);
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

// Bind the CUSTOMER_ID parameter
oci_bind_by_name($selectReviewStmt, ':customerId', $user_id);

// Execute the query
if (oci_execute($selectReviewStmt)) {
    // Fetch the results and populate the array
    while ($row = oci_fetch_assoc($selectReviewStmt)) {
        // Fetch additional product details for each review
        $productId = $row['PRODUCT_ID'];
        $productDetails = [];

        // Select PRODUCT_ID, PRODUCT_NAME, and PRODUCT_PICTURE from PRODUCT table
        $selectProductSql = "SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_PICTURE FROM PRODUCT WHERE PRODUCT_ID = :productId";

        // Prepare the OCI statement
        $selectProductStmt = oci_parse($conn, $selectProductSql);
        if (!$selectProductStmt) {
            $e = oci_error($conn);
            trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
        }

        // Bind the PRODUCT_ID parameter
        oci_bind_by_name($selectProductStmt, ':productId', $productId);

        // Execute the query
        if (oci_execute($selectProductStmt)) {
            // Fetch the product details
            $productDetails = oci_fetch_assoc($selectProductStmt);
        } else {
            $e = oci_error($selectProductStmt);
            echo "Error executing product query: " . htmlentities($e['message'], ENT_QUOTES);
        }

        // Free statement resources
        oci_free_statement($selectProductStmt);

        // Append the review details along with product details to the reviews array
        $reviews[] = [
            'REVIEW_ID' => $row['REVIEW_ID'],
            'PRODUCT_ID' => $productId,
            'PRODUCT_NAME' => $productDetails['PRODUCT_NAME'],
            'PRODUCT_PICTURE' => $productDetails['PRODUCT_PICTURE']
        ];
    }
} else {
    $e = oci_error($selectReviewStmt);
    echo "Error executing review query: " . htmlentities($e['message'], ENT_QUOTES);
}

// Free statement resources
oci_free_statement($selectReviewStmt);

if(isset($_POST["review_submit"]))
{
    // Function to sanitize input data
function sanitizeInput($data) {
    // Remove whitespace from the beginning and end of the string
    $data = trim($data);
    // Remove backslashes (\)
    $data = stripslashes($data);
    // Convert special characters to HTML entities
    $data = htmlspecialchars($data, ENT_QUOTES, 'UTF-8');
    // Allow only text, numbers, and some special characters
    $data = preg_replace("/[^a-zA-Z0-9\-_.,?!()'\"\s]/", "", $data);
    return $data;
}

    $submittedRating = sanitizeInput($_POST["rating"]);
    $submittedReview = sanitizeInput($_POST["review"]);
    $reviewId = sanitizeInput($_POST["review_id"]);

    // Update the review in the database
    $updateReviewSql = "UPDATE REVIEW SET REVIEW_SCORE = :rating, FEEDBACK = :feedback, REVIEW_PROCIDED = 1, REVIEW_DATE = CURRENT_DATE WHERE REVIEW_ID = :reviewId";

// Prepare the OCI statement
$updateReviewStmt = oci_parse($conn, $updateReviewSql);
if (!$updateReviewStmt) {
    $e = oci_error($conn);
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

// Bind parameters
oci_bind_by_name($updateReviewStmt, ':rating', $submittedRating);
oci_bind_by_name($updateReviewStmt, ':feedback', $submittedReview);
oci_bind_by_name($updateReviewStmt, ':reviewId', $reviewId);

// Execute the statement
if (oci_execute($updateReviewStmt)) {
    // Review updated successfully
    header("Location: {$_SERVER['PHP_SELF']}");
    exit();
} else {
    // Error updating review
    $e = oci_error($updateReviewStmt);
    echo "Error updating review: " . htmlentities($e['message'], ENT_QUOTES);
}

// Free statement resources
oci_free_statement($updateReviewStmt);


}

}
// Initialize an empty array to store the products
$products = [];

// SQL query to select products
$selectProductsSql = "SELECT PRODUCT_ID, PRODUCT_DESCRIPTION, PRODUCT_NAME, PRODUCT_PICTURE FROM PRODUCT WHERE IS_DISABLED = 0";

// Prepare the OCI statement
$selectProductsStmt = oci_parse($conn, $selectProductsSql);
if (!$selectProductsStmt) {
    $e = oci_error($conn);
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

// Execute the query
if (oci_execute($selectProductsStmt)) {
    // Fetch the results and populate the array
    while ($row = oci_fetch_assoc($selectProductsStmt)) {
        $products[] = $row;
    }
} else {
    $e = oci_error($selectProductsStmt);
    echo "Error executing product query: " . htmlentities($e['message'], ENT_QUOTES);
}

// Free statement resources
oci_free_statement($selectProductsStmt);

// Prepare the SQL statement to get the required data
$sql = "SELECT p.PRODUCT_ID, p.PRODUCT_NAME, p.PRODUCT_PRICE, p.PRODUCT_PICTURE, 
               AVG(r.REVIEW_SCORE) AS AVG_REVIEW_SCORE
        FROM product p
        LEFT JOIN review r ON p.PRODUCT_ID = r.PRODUCT_ID
        WHERE p.IS_DISABLED = 0
        GROUP BY p.PRODUCT_ID, p.PRODUCT_NAME, p.PRODUCT_PRICE, p.PRODUCT_PICTURE";

// Parse the SQL statement
$stmt = oci_parse($conn, $sql);

// Execute the SQL statement
oci_execute($stmt);

// Initialize an array to store the results
$products_review = array();

// Fetch the results
while ($row = oci_fetch_assoc($stmt)) {
    $products_review[] = $row;
}

// Free statement resources
oci_free_statement($stmt);

// Randomly select 6 products from the array
$selected_indices = array_rand($products_review, min(6, count($products_review)));

// Ensure $selected_indices is an array if only one product is returned
if (!is_array($selected_indices)) {
    $selected_indices = array($selected_indices);
}


// Prepare the SQL statement to get the review data
$sql = "SELECT 
            r.REVIEW_SCORE, 
            r.FEEDBACK, 
            h.FIRST_NAME || ' ' || h.LAST_NAME AS NAME, 
            h.USER_PROFILE_PICTURE 
        FROM 
            REVIEW r 
        JOIN 
            HUDDER_USER h ON r.USER_ID = h.USER_ID 
        WHERE 
            r.REVIEW_PROCIDED = 1";
// Parse the SQL statement
$stmt = oci_parse($conn, $sql);

// Execute the SQL statement
oci_execute($stmt);

// Initialize an array to store the results
$user_review = array();

// Fetch the results
while ($row = oci_fetch_assoc($stmt)) {
    $user_review[] = $row;
}

// Free statement resources
oci_free_statement($stmt);

// Prepare the SQL statement to get the trader's information
$sql = "SELECT 
            u.FIRST_NAME || ' ' || u.LAST_NAME AS NAME, 
            u.USER_PROFILE_PICTURE,
            s.SHOP_DESCRIPTION
        FROM 
            HUDDER_USER u 
        JOIN 
            SHOP s ON u.USER_ID = s.USER_ID 
        WHERE 
            u.USER_TYPE = 'trader'";

// Parse the SQL statement
$stmt = oci_parse($conn, $sql);

// Execute the SQL statement
oci_execute($stmt);

// Initialize an array to store the results
$trader_shop = array();

// Fetch the results
while ($row = oci_fetch_assoc($stmt)) {
    $trader_shop[] = $row;
}

// Free statement resources
oci_free_statement($stmt);

// Close the connection
oci_close($conn);

?>
