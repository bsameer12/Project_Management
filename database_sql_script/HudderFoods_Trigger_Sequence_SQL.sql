--create sequence for primary key 
DROP SEQUENCE SEQ_USER;
CREATE SEQUENCE SEQ_USER START WITH 1;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER user_trg
BEFORE INSERT ON HUDDER_USER
FOR EACH ROW
BEGIN 
  IF :NEW.user_id IS NULL THEN 
  SELECT seq_user.NEXTVAL INTO :NEW.user_id FROM SYS.DUAL;
  END IF;
END;
/
--create sequence for primary key 
DROP SEQUENCE SEQ_TRADER;
CREATE SEQUENCE SEQ_TRADER START WITH 200;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER trader_trg
BEFORE INSERT ON TRADER
FOR EACH ROW
BEGIN 
  IF :NEW.trader_id IS NULL THEN 
  SELECT seq_trader.NEXTVAL INTO :NEW.trader_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_CUSTOMER;
CREATE SEQUENCE SEQ_CUSTOMER START WITH 300;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER customer_trg
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN 
  IF :NEW.customer_id IS NULL THEN 
  SELECT seq_customer.NEXTVAL INTO :NEW.customer_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_ADMIN;
CREATE SEQUENCE SEQ_ADMIN START WITH 400;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER admin_trg
BEFORE INSERT ON ADMIN
FOR EACH ROW
BEGIN 
  IF :NEW.admin_id IS NULL THEN 
  SELECT seq_admin.NEXTVAL INTO :NEW.admin_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_SHOP;
CREATE SEQUENCE SEQ_SHOP START WITH 500;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER shop_trg
BEFORE INSERT ON SHOP
FOR EACH ROW
BEGIN 
  IF :NEW.shop_id IS NULL THEN 
  SELECT seq_shop.NEXTVAL INTO :NEW.shop_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_PRODUCT;
CREATE SEQUENCE SEQ_PRODUCT START WITH 600;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER product_trg
BEFORE INSERT ON PRODUCT
FOR EACH ROW
BEGIN 
  IF :NEW.product_id IS NULL THEN 
  SELECT seq_product.NEXTVAL INTO :NEW.product_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_REPORT;
CREATE SEQUENCE SEQ_REPORT START WITH 700;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER report_trg
BEFORE INSERT ON REPORT
FOR EACH ROW
BEGIN 
  IF :NEW.report_id IS NULL THEN 
  SELECT seq_report.NEXTVAL INTO :NEW.report_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_REVIEW;
CREATE SEQUENCE SEQ_REVIEW START WITH 800;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER review_trg
BEFORE INSERT ON REVIEW
FOR EACH ROW
BEGIN 
  IF :NEW.review_id IS NULL THEN 
  SELECT seq_review.NEXTVAL INTO :NEW.review_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_CART;
CREATE SEQUENCE SEQ_CART START WITH 900;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER cart_trg
BEFORE INSERT ON CART
FOR EACH ROW
BEGIN 
  IF :NEW.cart_id IS NULL THEN 
  SELECT seq_cart.NEXTVAL INTO :NEW.cart_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_WISHLIST;
CREATE SEQUENCE SEQ_WISHLIST START WITH 1000;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER wishlist_trg
BEFORE INSERT ON WISHLIST
FOR EACH ROW
BEGIN 
  IF :NEW.wishlist_id IS NULL THEN 
  SELECT seq_wishlist.NEXTVAL INTO :NEW.wishlist_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_CATEGORY;
CREATE SEQUENCE SEQ_CATEGORY START WITH 1100;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER category_trg
BEFORE INSERT ON PRODUCT_CATEGORY
FOR EACH ROW
BEGIN 
  IF :NEW.category_id IS NULL THEN 
  SELECT seq_category.NEXTVAL INTO :NEW.category_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_DISCOUNT;
CREATE SEQUENCE SEQ_DISCOUNT START WITH 1200;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER discount_trg
BEFORE INSERT ON DISCOUNT
FOR EACH ROW
BEGIN 
  IF :NEW.discount_id IS NULL THEN 
  SELECT seq_discount.NEXTVAL INTO :NEW.discount_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_PAYMENT;
CREATE SEQUENCE SEQ_PAYMENT START WITH 1300;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER payment_trg
BEFORE INSERT ON PAYMENT
FOR EACH ROW
BEGIN 
  IF :NEW.payment_id IS NULL THEN 
  SELECT seq_payment.NEXTVAL INTO :NEW.payment_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_ORDER;
CREATE SEQUENCE SEQ_ORDER START WITH 1400;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER order_trg
BEFORE INSERT ON ORDER_PRODUCT
FOR EACH ROW
BEGIN 
  IF :NEW.order_product_id IS NULL THEN 
  SELECT seq_order.NEXTVAL INTO :NEW.order_product_id FROM SYS.DUAL;
  END IF;
END;
/

--create sequence for primary key 
DROP SEQUENCE SEQ_SLOT;
CREATE SEQUENCE SEQ_SLOT START WITH 1500;
--create trigger
COMMIT;
CREATE OR REPLACE TRIGGER slot_trg
BEFORE INSERT ON collection_slot
FOR EACH ROW
BEGIN 
  IF :NEW.slot_id IS NULL THEN 
  SELECT seq_slot.NEXTVAL INTO :NEW.slot_id FROM SYS.DUAL;
  END IF;
END;
/

